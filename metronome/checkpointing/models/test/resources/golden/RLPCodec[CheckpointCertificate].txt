CheckpointCertificate(NonEmptyList(Header(ByteVector(32 bytes, 0x004b6b79006d007e8100018001b28018017f00530d7f3a009e7f44ff34920100),ByteVector(32 bytes, 0x001dbe01ee39800001a180ff35e8007fff015a0f4f80c74d39755a01a79dff7f),ByteVector(32 bytes, 0x11bf30c5de133d08efadc7586c8490171de86fa429031d44441f2e84827e5b79),ByteVector(32 bytes, 0x01d1046600ff80ff01c4008d038043ff805975f901806a0101ff73ff80807f80)), Header(ByteVector(32 bytes, 0xb101ff927401d400ff7fbc007fdb282db1ffb37f940099ab7f801bf9017c7fe8),ByteVector(32 bytes, 0xd2737f3100007f00328680ccc16001ff0037ac417a5720ff007f01a63101be0e),ByteVector(32 bytes, 0xd9b7f9d47a106a6c178873aff3e71990274315b2edc595384824fbaca2e86932),ByteVector(32 bytes, 0x0098007765ffc41a8001a700cd7f018e007f2750325c800000c91d2080008083))),CheckpointCandidate(BitVector(24 bits, 0x01e400)),Proof(2,4,Vector(ByteVector(32 bytes, 0x005180ff80806f009880f670b58025b98fd6ff800151ff8149baf70115ff0800), ByteVector(32 bytes, 0x24f9f25480007f87bc6c3c677f1c808080eb416a473b010101447c0b807f01de))),QuorumCertificate(Commit,10,ByteVector(32 bytes, 0x68cc81000e7fa4a2017f39ff01ff007f65507f004eff5a83ff403293a8d47f00),GroupSignature(List(ECDSASignature(94,65,28), ECDSASignature(11,63,28)))))