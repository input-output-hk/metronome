metronome {
  checkpointing {
    federation {
      self {
        # Public IP of this federation member; required.
        host = null
        # Public TCP port of this federation member; required.
        port = null
        # Public ECDSA key of this federation member; required.
        public-key = null
      }
      # Private ECDSA key of this federation member; required.
      private-key = null

      # List of other federation members (host, port, public-key).
      others = []

      # The maximum number of tolerated Byzantine nodes; optional.
      # At most (n-1)/3, but can be lower to require smaller quorum.
      maxFaulty = null
    }

    network {
      # Bind address of the listening interface.
      host = 0.0.0.0
      # Bind address of the listening interface.
      port = ${metronome.checkpointing.federation.self.port}
      # Network request timeout.
      timeout = 3s
    }

    database {
      # Storage for RocksDB files.
      path = ${user.home}"/.metronome/checkpointing/db"
      # Size of the ring buffer for the checkpointing ledger.
      state-history-size = 100
      # Number of blocks to keep before pruning.
      block-history-size = 100
      # Time to wait before pruning a block from history.
      prune-interval = 60s
    }

    consensus {
      # Minimum time to allow for a HotStuff round.
      min-timeout = 5s
      # Maximum time to allow for a HotStuff round, after numerous timeouts.
      max-timeout = 15s
      # Increment factor to apply on the timeout after a failed round.
      timeout-factor = 1.2
    }
  }
}
